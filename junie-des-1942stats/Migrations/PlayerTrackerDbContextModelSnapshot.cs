// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using junie_des_1942stats.PlayerTracking;

#nullable disable

namespace junie_des_1942stats.Migrations
{
    [DbContext(typeof(PlayerTrackerDbContext))]
    partial class PlayerTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.GameServer", b =>
                {
                    b.Property<string>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.HasKey("Guid");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.Player", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AiBot")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstSeen")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalPlayTimeMinutes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.PlayerObservation", b =>
                {
                    b.Property<int>("ObservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Deaths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ping")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamLabel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("ObservationId");

                    b.HasIndex("SessionId");

                    b.ToTable("PlayerObservations");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.PlayerSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastSeenTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("MapName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ObservationCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerGuid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalDeaths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalScore")
                        .HasColumnType("INTEGER");

                    b.HasKey("SessionId");

                    b.HasIndex("ServerGuid");

                    b.HasIndex("PlayerName", "ServerGuid", "IsActive");

                    b.ToTable("PlayerSessions");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.ServerPlayerRanking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HighestScore")
                        .HasColumnType("INTEGER");

                    b.Property<double>("KDRatio")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ServerGuid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalDeaths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalPlayTimeMinutes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerName");

                    b.HasIndex("ServerGuid", "PlayerName")
                        .IsUnique();

                    b.HasIndex("ServerGuid", "Rank");

                    b.ToTable("ServerPlayerRankings");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.PlayerObservation", b =>
                {
                    b.HasOne("junie_des_1942stats.PlayerTracking.PlayerSession", "Session")
                        .WithMany("Observations")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.PlayerSession", b =>
                {
                    b.HasOne("junie_des_1942stats.PlayerTracking.Player", "Player")
                        .WithMany("Sessions")
                        .HasForeignKey("PlayerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("junie_des_1942stats.PlayerTracking.GameServer", "Server")
                        .WithMany("Sessions")
                        .HasForeignKey("ServerGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.ServerPlayerRanking", b =>
                {
                    b.HasOne("junie_des_1942stats.PlayerTracking.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("junie_des_1942stats.PlayerTracking.GameServer", null)
                        .WithMany()
                        .HasForeignKey("ServerGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.GameServer", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.Player", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("junie_des_1942stats.PlayerTracking.PlayerSession", b =>
                {
                    b.Navigation("Observations");
                });
#pragma warning restore 612, 618
        }
    }
}
