apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bf42-stats-pvc
  namespace: bf42-stats
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bf42-stats
  namespace: bf42-stats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bf42-stats
  template:
    metadata:
      labels:
        app: bf42-stats
    spec:
      nodeSelector:
        kubernetes.io/hostname: bethany
      containers:
        - name: nginx
          image: localhost:30500/bf42-stats:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: DB_PATH
              value: "/mnt/data/playertracker.db"
            - name: ASPNETCORE_URLS
              value: "http://+:8080"

            - name: CLICKHOUSE_URL
              value: "http://clickhouse-service.clickhouse:8123"
            - name: CLICKHOUSE_WRITE_URL
              value: "http://clickhouse-service.clickhouse:8123"
            - name: PLAYER_ROUNDS_BATCH_SIZE
              value: "100000"
            - name: REDIS_CONNECTION_STRING
              value: "redis-service.bf42-stats:6379"
            - name: ENABLE_CLICKHOUSE_ROUND_SYNCING
              value: "true"
            - name: ENABLE_GAMIFICATION_PROCESSING
              value: "true"
            - name: ENABLE_PLAYER_METRICS_SYNCING
              value: "false"
            - name: ENABLE_SERVER_ONLINE_COUNTS_SYNCING
              value: "false"
            - name: GoogleOAuth__ClientId
              value: "468014767883-2gsdumjjgpgm2fp1qgic82i45k03tj7e.apps.googleusercontent.com"
            - name: Jwt__Issuer
              value: "https://1942.munyard.dev"
            - name: Jwt__Audience
              value: "https://1942.munyard.dev"
            - name: Cors__AllowedOrigins
              value: "https://1942.munyard.dev"
            # Bot Detection Configuration
            - name: BotDetection__DefaultPlayerNames__0
              value: "BFPlayer"
            - name: BotDetection__DefaultPlayerNames__1
              value: "Player"
            - name: BotDetection__DefaultPlayerNames__2
              value: "BFSoldier"
            # Refresh token cookie configuration (Secret provided via external secret manager)
            - name: RefreshToken__CookieName
              value: "rt"
            - name: RefreshToken__CookieDomain
              value: "1942.munyard.dev"
            - name: RefreshToken__CookiePath
              value: "/stats"
            - name: RefreshToken__Days
              value: "60"
            # Secrets from Kubernetes Secret `bf42-stats-secrets`
            - name: Jwt__PrivateKey
              valueFrom:
                secretKeyRef:
                  name: bf42-stats-secrets
                  key: jwt-private-key
            - name: RefreshToken__Secret
              valueFrom:
                secretKeyRef:
                  name: bf42-stats-secrets
                  key: refresh-token-secret
          volumeMounts:
            - name: stats-data
              mountPath: /mnt/data
      volumes:
        - name: stats-data
          persistentVolumeClaim:
            claimName: bf42-stats-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: bf42-stats-service
  namespace: bf42-stats
  labels:
    app: bf42-stats
spec:
  selector:
    app: bf42-stats
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      name: api

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: bf42-stats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          args:
            - redis-server
            - --appendonly
            - "yes"
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: bf42-stats
  labels:
    app: redis
spec:
  selector:
    app: redis
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      name: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
  namespace: bf42-stats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-commander
  template:
    metadata:
      labels:
        app: redis-commander
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      containers:
        - name: redis-commander
          image: erikdubbelboer/phpredisadmin:latest
          ports:
            - containerPort: 80
          env:
            - name: REDIS_1_HOST
              value: "redis-service.bf42-stats"
            - name: REDIS_1_PORT
              value: "6379"

---
apiVersion: v1
kind: Service
metadata:
  name: redis-commander-service
  namespace: bf42-stats
  labels:
    app: redis-commander
spec:
  selector:
    app: redis-commander
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: web

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-dev
  namespace: bf42-stats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-dev
  template:
    metadata:
      labels:
        app: redis-dev
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      containers:
        - name: redis
          image: redis:7-alpine